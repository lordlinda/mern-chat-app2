{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/ChatPage/Sections/ChatCard.js","components/views/ChatPage/ChatPage.js","_actions/chat_actions.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/chat_reducer.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","AFTER_POST_MESSAGE","USER_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","_useState","useState","_useState2","slicedToArray","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","setRememberMe","handleRememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","style","width","es_form","Item","input","prefix","icon","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","es_checkbox","checked","href","float","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","ChatCard","console","log","process","comment","author","sender","avatar","src","alt","content","message","substring","maxWidth","controls","datetime","tooltip","title","format","fromNow","ChatPage","chatMessage","hanleSearchChange","e","_this","setState","target","renderCards","chats","map","chat","Sections_ChatCard","key","_id","onDrop","files","userData","formData","FormData","append","Axios","header","content-type","url","userId","userName","userImage","nowTime","socket","emit","submitChatMessage","preventDefault","_this2","io","transports","on","messageFromBackEnd","messagesEnd","scrollIntoView","behavior","_this3","Fragment","textAlign","margin","ref","el","clear","row","layout","col","dist_es","getRootProps","getInputProps","Component","connect","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","menu","mode","status","NavBar","visible","setVisible","position","zIndex","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","App","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","LoginPage","Footer_Footer","Boolean","location","hostname","match","rootReducer","combineReducers","action","_objectSpread","register","loginSucces","chat_reducer_objectSpread","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4711ad3e.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n\n\nexport const GET_CHATS = 'get_chat';\nexport const AFTER_POST_MESSAGE = 'after_post_message';\n\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const CHAT_SERVER = '/api/chat';\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/register_login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from \"axios\";\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from \"./types\";\nimport { USER_SERVER } from \"../components/Config.js\";\n\nexport function registerUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/register`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request,\n  };\n}\n\nexport function loginUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/login`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: LOGIN_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios\n    .get(`${USER_SERVER}/auth`)\n    .then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\nexport function logoutUser() {\n  const request = axios\n    .get(`${USER_SERVER}/logout`)\n    .then((response) => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    payload: request,\n  };\n}\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Tooltip, Avatar } from \"antd\";\n\nfunction ChatCard(props) {\n  console.log(process.env.REACT_APP_URL);\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Comment\n        author={props.sender.name}\n        avatar={<Avatar src={props.sender.image} alt={props.sender.name} />}\n        content={\n          props.message.substring(0, 8) === \"uploads/\" ? (\n            // this will be either video or image\n\n            props.message.substring(\n              props.message.length - 3,\n              props.message.length\n            ) === \"mp4\" ? (\n              <video\n                style={{ maxWidth: \"200px\" }}\n                src={`${process.env.REACT_APP_URL}${props.message}`}\n                alt=\"video\"\n                type=\"video/mp4\"\n                controls\n              />\n            ) : (\n              <img\n                style={{ maxWidth: \"200px\" }}\n                src={`${process.env.REACT_APP_URL}${props.message}`}\n                alt=\"img\"\n              />\n            )\n          ) : (\n            <p>{props.message}</p>\n          )\n        }\n        datetime={\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\n            <span>{moment().fromNow()}</span>\n          </Tooltip>\n        }\n      />\n    </div>\n  );\n}\n\nexport default ChatCard;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, Row, Col } from \"antd\";\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getChats, afterPostMessage } from \"../../../_actions/chat_actions\";\nimport ChatCard from \"./Sections/ChatCard\";\nimport Dropzone from \"react-dropzone\";\nimport Axios from \"axios\";\n\nclass ChatPage extends Component {\n  state = {\n    chatMessage: \"\",\n  };\n\n  componentDidMount() {\n    let server = `https://mernchatapp2.herokuapp.com/`;\n\n    this.props.dispatch(getChats());\n\n    this.socket = io(server, {\n      transports: [\"websocket\"],\n    });\n\n    this.socket.on(\"Output Chat Message\", (messageFromBackEnd) => {\n      console.log(messageFromBackEnd);\n      this.props.dispatch(afterPostMessage(messageFromBackEnd));\n    });\n  }\n\n  componentDidUpdate() {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  hanleSearchChange = (e) => {\n    this.setState({\n      chatMessage: e.target.value,\n    });\n  };\n\n  renderCards = () =>\n    this.props.chats &&\n    this.props.chats.map((chat) => <ChatCard key={chat._id} {...chat} />);\n\n  onDrop = (files) => {\n    console.log(files);\n\n    if (this.props.user.userData && !this.props.user.userData.isAuth) {\n      return alert(\"Please Log in first\");\n    }\n\n    let formData = new FormData();\n\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    formData.append(\"file\", files[0]);\n\n    Axios.post(\"api/chat/uploadfiles\", formData, config).then((response) => {\n      if (response.data.success) {\n        let chatMessage = response.data.url;\n        let userId = this.props.user.userData._id;\n        let userName = this.props.user.userData.name;\n        let userImage = this.props.user.userData.image;\n        let nowTime = moment();\n        let type = \"VideoOrImage\";\n\n        this.socket.emit(\"Input Chat Message\", {\n          chatMessage,\n          userId,\n          userName,\n          userImage,\n          nowTime,\n          type,\n        });\n      }\n    });\n  };\n\n  submitChatMessage = (e) => {\n    e.preventDefault();\n\n    if (this.props.user.userData && !this.props.user.userData.isAuth) {\n      return alert(\"Please Log in first\");\n    }\n\n    let chatMessage = this.state.chatMessage;\n    let userId = this.props.user.userData._id;\n    let userName = this.props.user.userData.name;\n    let userImage = this.props.user.userData.image;\n    let nowTime = moment();\n    let type = \"Text\";\n\n    this.socket.emit(\"Input Chat Message\", {\n      chatMessage,\n      userId,\n      userName,\n      userImage,\n      nowTime,\n      type,\n    });\n    this.setState({ chatMessage: \"\" });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <p style={{ fontSize: \"2rem\", textAlign: \"center\" }}>\n            {\" \"}\n            Real Time Chat\n          </p>\n        </div>\n\n        <div style={{ maxWidth: \"800px\", margin: \"0 auto\" }}>\n          <div className=\"infinite-container\">\n            {this.props.chats && this.renderCards()}\n            <div\n              ref={(el) => {\n                this.messagesEnd = el;\n              }}\n              style={{ float: \"left\", clear: \"both\" }}\n            />\n          </div>\n\n          <Row>\n            <Form layout=\"inline\" onSubmit={this.submitChatMessage}>\n              <Col span={18}>\n                <Input\n                  id=\"message\"\n                  prefix={\n                    <Icon type=\"message\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Let's start talking\"\n                  type=\"text\"\n                  value={this.state.chatMessage}\n                  onChange={this.hanleSearchChange}\n                />\n              </Col>\n              <Col span={2}>\n                <Dropzone onDrop={this.onDrop}>\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Button>\n                          <Icon type=\"upload\" />\n                        </Button>\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n              </Col>\n\n              <Col span={4}>\n                <Button\n                  type=\"primary\"\n                  style={{ width: \"100%\" }}\n                  onClick={this.submitChatMessage}\n                  htmlType=\"submit\"\n                >\n                  <Icon type=\"enter\" />\n                </Button>\n              </Col>\n            </Form>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    chats: state.chat.chats,\n  };\n};\n\nexport default connect(mapStateToProps)(ChatPage);\n","import axios from \"axios\";\nimport { GET_CHATS, AFTER_POST_MESSAGE } from \"./types\";\nimport { CHAT_SERVER } from \"../components/Config.js\";\n\nexport const getChats = () => async (dispatch) => {\n  const request = await axios\n    .get(`${CHAT_SERVER}/getChats`)\n    .then((response) => response.data);\n  console.log(request);\n  dispatch({\n    type: GET_CHATS,\n    payload: request,\n  });\n};\n\nexport function afterPostMessage(data) {\n  return {\n    type: AFTER_POST_MESSAGE,\n    payload: data,\n  };\n}\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <Menu.Item key=\"chat\">\n      <a href=\"/chat\">Chat</a>\n    </Menu.Item>\n    <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport ChatPage from \"./views/ChatPage/ChatPage\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div\n        className=\"content_wrapper\"\n        style={{ paddingTop: \"75px\", minHeight: \"calc(100vh - 80px)\" }}\n      >\n        <Switch>\n          <Route exact path=\"/\" component={Auth(ChatPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    GET_CHATS,\n    AFTER_POST_MESSAGE\n} from '../_actions/types';\n \nexport default function(state={},action){\n    switch(action.type){\n        case GET_CHATS:\n            return {...state, chats: action.payload }\n        case AFTER_POST_MESSAGE:\n                return {...state, chats: state.chats.concat(action.payload) }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport chat from './chat_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n    chat\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}